package com.vip.pallas.search.netty.http.handler;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.vip.pallas.search.filter.common.SessionContext;
import com.vip.pallas.search.netty.http.NettyPallasRequest;

import io.netty.channel.Channel;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.codec.http.FullHttpRequest;

import java.net.SocketAddress;

import org.junit.Test;

/**
 * Unit tests for com.vip.pallas.search.netty.http.handler.InternalRestHandler
 *
 * @author Diffblue Cover
 */

public class InternalRestHandlerTest {

	@Test
	public void invokeRestService() {

		// arrange
		FullHttpRequest httpRequest1 = mock(FullHttpRequest.class);
		Channel channel1 = mock(Channel.class);
		ChannelHandlerContext ctx = mock(ChannelHandlerContext.class);
		SessionContext context = new SessionContext();
		FullHttpRequest httpRequest2 = mock(FullHttpRequest.class);
		Channel channel2 = mock(Channel.class);
		context.setRequest(new NettyPallasRequest(httpRequest2, channel2));

		// act
		new InternalRestHandler().invokeRestService(new NettyPallasRequest(httpRequest1, channel1), ctx, context);

		// assert
		assertThat(context.getRequest().getCookieMap().isEmpty(), is(true));
		assertThat(context.getRequest().getParameterMap().isEmpty(), is(true));
	}

	@Test
	public void doBusiness() {

		// arrange
		FullHttpRequest httpRequest1 = mock(FullHttpRequest.class);
		Channel channel1 = mock(Channel.class);
		ChannelHandlerContext ctx = mock(ChannelHandlerContext.class);
		SessionContext context = new SessionContext();
		FullHttpRequest httpRequest2 = mock(FullHttpRequest.class);
		SocketAddress socketAddress1 = mock(SocketAddress.class);
		SocketAddress socketAddress2 = mock(SocketAddress.class);
		Channel channel2 = mock(Channel.class);
		when(channel2.remoteAddress())
			.thenReturn(socketAddress1)
			.thenReturn(socketAddress2);
		context.setRequest(new NettyPallasRequest(httpRequest2, channel2));

		// act
		new InternalRestHandler().doBusiness(new NettyPallasRequest(httpRequest1, channel1), ctx, context);

		// assert
		assertThat(context.getRequest().getCookieMap().isEmpty(), is(true));
		assertThat(context.getRequest().getParameterMap().isEmpty(), is(true));
	}
}
